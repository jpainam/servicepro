package com.cfao.app.beans;


import com.cfao.app.util.Constante;
import javafx.beans.property.ObjectProperty;
import javafx.beans.property.SimpleBooleanProperty;
import javafx.beans.property.SimpleObjectProperty;

import javax.persistence.*;

/**
 * PersonneCompetence generated by hbm2java
 */
@Entity
@Table(name = "personne_competence"
)
public class PersonneCompetence implements java.io.Serializable {


    private PersonneCompetenceId id = new PersonneCompetenceId();
    private SimpleObjectProperty<CompetenceCertification> competenceCertification = new SimpleObjectProperty<>();
    private ObjectProperty<Competence> competence = new SimpleObjectProperty<>();
    private ObjectProperty<Personne> personne = new SimpleObjectProperty<>();

    private SimpleBooleanProperty acertifier = new SimpleBooleanProperty(false);
    private SimpleBooleanProperty certifiee = new SimpleBooleanProperty(false);
    private SimpleBooleanProperty encours = new SimpleBooleanProperty(false);

    public PersonneCompetence() {
    }


    public PersonneCompetence(PersonneCompetenceId id, CompetenceCertification competenceCertification, Competence competence, Personne personne) {
        this.id = id;
        this.competenceCertification.set(competenceCertification);
        this.competence.set(competence);
        this.personne.set(personne);
    }

    @EmbeddedId


    @AttributeOverrides({
            @AttributeOverride(name = "personne", column = @Column(name = "PERSONNE", nullable = false)),
            @AttributeOverride(name = "competence", column = @Column(name = "COMPETENCE", nullable = false))})
    public PersonneCompetenceId getId() {
        return this.id;
    }

    public void setId(PersonneCompetenceId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CERTIFICATION", nullable = false)
    public CompetenceCertification getCompetenceCertification() {

        if (this.competenceCertification.get().getCertification().equals(Constante.COMPETENCE_ENCOURS)) {
            setEncours(true);
        } else if (this.competenceCertification.get().getCertification().equals(Constante.COMPETENCE_CERTIFIEE)) {
            setCertifiee(true);
        } else {
            setAcertifier(true);
        }
        return this.competenceCertification.get();
    }

    public void setCompetenceCertification(CompetenceCertification competenceCertification) {
        this.competenceCertification.set(competenceCertification);
        if (competenceCertification.getCertification().equals(Constante.COMPETENCE_ENCOURS)) {
            setEncours(true);
        } else if (competenceCertification.getCertification().equals(Constante.COMPETENCE_CERTIFIEE)) {
            setCertifiee(true);
        } else {
            setAcertifier(true);
        }
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "COMPETENCE", nullable = false, insertable = false, updatable = false)
    public Competence getCompetence() {
        return this.competence.get();
    }

    public void setCompetence(Competence competence) {
        this.competence.set(competence);
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PERSONNE", nullable = false, insertable = false, updatable = false)
    public Personne getPersonne() {
        return this.personne.get();
    }

    public void setPersonne(Personne personne) {
        this.personne.set(personne);
    }


    @Override
    public String toString() {
        return "PersonneCompetence{" +
                "id=" + id +
                ", competenceCertification=" + competenceCertification +
                ", competence=" + competence +
                ", personne=" + personne +
                '}';
    }

    @Transient
    public Boolean isAcertifier() {
        return acertifier.get();
    }

    public SimpleBooleanProperty acertifierProperty() {
        return acertifier;
    }

    public void setAcertifier(Boolean acertifier) {
        this.acertifier.set(acertifier);
        if (acertifier) {
            this.competenceCertification.get().setCertification(Constante.COMPETENCE_ACERTIFIER);
            //System.err.println(this.competenceCertification.get().getCertification());
        }
    }

    @Transient
    public Boolean isCertifiee() {
        return certifiee.get();
    }

    public SimpleBooleanProperty certifieeProperty() {
        return certifiee;
    }

    public void setCertifiee(Boolean certifiee) {
        this.certifiee.set(certifiee);
        if (certifiee) {
            this.competenceCertification.get().setCertification(Constante.COMPETENCE_CERTIFIEE);
            //System.err.println(this.competenceCertification.get().getCertification());
        }
    }

    @Transient
    public Boolean isEncours() {
        return encours.get();
    }

    public SimpleBooleanProperty encoursProperty() {
        return encours;
    }

    public void setEncours(Boolean encours) {
        this.encours.set(encours);
        if (encours) {
            this.competenceCertification.get().setCertification(Constante.COMPETENCE_ENCOURS);
            //System.err.println(this.competenceCertification.get().getCertification());
        }
    }
    public ObjectProperty<Competence> competence() {
        return competence;
    }
}

