package com.cfao.app.beans;


import javafx.beans.property.ObjectProperty;
import javafx.beans.property.SimpleObjectProperty;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * PersonneCompetence generated by hbm2java
 */
@Entity
@Table(name="personne_competence"
        ,catalog="servicepro"
)
public class PersonneCompetence  implements java.io.Serializable {


    private PersonneCompetenceId id = new PersonneCompetenceId();
    private SimpleObjectProperty<CompetenceCertification> competenceCertification = new SimpleObjectProperty<>();
    private ObjectProperty<Competence> competence = new SimpleObjectProperty<>();
    private ObjectProperty<Personne> personne = new SimpleObjectProperty<>();

    public PersonneCompetence() {
    }


    public PersonneCompetence(PersonneCompetenceId id, CompetenceCertification competenceCertification, Competence competence, Personne personne) {
        this.id = id;
        this.competenceCertification.set(competenceCertification);
        this.competence.set(competence);
        this.personne.set(personne);
    }

    @EmbeddedId


    @AttributeOverrides( {
            @AttributeOverride(name="personne", column=@Column(name="PERSONNE", nullable=false) ),
            @AttributeOverride(name="competence", column=@Column(name="COMPETENCE", nullable=false) ) } )
    public PersonneCompetenceId getId() {
        return this.id;
    }

    public void setId(PersonneCompetenceId id) {
        this.id = id;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CERTIFICATION", nullable=false)
    public CompetenceCertification getCompetenceCertification() {
        return this.competenceCertification.get();
    }

    public void setCompetenceCertification(CompetenceCertification competenceCertification) {
        this.competenceCertification.set(competenceCertification);
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COMPETENCE", nullable=false, insertable=false, updatable=false)
    public Competence getCompetence() {
        return this.competence.get();
    }

    public void setCompetence(Competence competence) {
        this.competence.set(competence);
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PERSONNE", nullable=false, insertable=false, updatable=false)
    public Personne getPersonne() {
        return this.personne.get();
    }

    public void setPersonne(Personne personne) {
        this.personne.set(personne);
    }


    @Override
    public String toString() {
        return "PersonneCompetence{" +
                "id=" + id +
                ", competenceCertification=" + competenceCertification +
                ", competence=" + competence +
                ", personne=" + personne +
                '}';
    }
}

