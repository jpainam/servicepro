package com.cfao.app.beans;


import javafx.beans.property.*;
import javafx.collections.FXCollections;

import javax.persistence.*;

import java.util.List;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Qcm generated by hbm2java
 */
@Entity
@Table(name = "qcm"
        , catalog = "servicepro"
)
public class Qcm implements java.io.Serializable {


    private Integer idqcm;
    private ObjectProperty<QcmType> qcmType = new SimpleObjectProperty<>();
    private SimpleStringProperty titre = new SimpleStringProperty();
    private SimpleIntegerProperty base = new SimpleIntegerProperty();
    private ListProperty<Competence> competences = new SimpleListProperty();
    private ListProperty<PersonneQcm> personneQcms = new SimpleListProperty<>();

    public Qcm() {
    }


    public Qcm(String titre) {
        this.titre.set(titre);
    }

    public Qcm(QcmType qcmType, String titre) {
        this.qcmType.set(qcmType);
        this.titre.set(titre);
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "IDQCM", unique = true, nullable = false)
    public Integer getIdqcm() {
        return this.idqcm;
    }

    public void setIdqcm(Integer idqcm) {
        this.idqcm = idqcm;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TYPE")
    public QcmType getQcmType() {
        return this.qcmType.get();
    }

    public void setQcmType(QcmType qcmType) {
        this.qcmType.set(qcmType);
    }


    @Column(name = "TITRE", nullable = false, length = 250)
    public String getTitre() {
        return this.titre.get();
    }

    public void setTitre(String titre) {
        this.titre.set(titre);
    }

    public SimpleStringProperty titre() {
        return this.titre;
    }

    @Override
    public String toString() {
        return titre.get();
    }

    @Column(name = "BASE", nullable = false)
    public Integer getBase() {
        return base.get();
    }

    public SimpleIntegerProperty baseProperty() {
        return base;
    }

    public void setBase(Integer base) {
        this.base.set(base);
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "qcm_competence", catalog = "servicepro", joinColumns = {
            @JoinColumn(name = "QCM", nullable = false, updatable = false)}, inverseJoinColumns = {
            @JoinColumn(name = "COMPETENCE", nullable = false, updatable = false)})
    public List<Competence> getCompetences() {
        return this.competences;
    }

    public void setCompetences(List<Competence> competences) {
        this.competences.set(FXCollections.observableArrayList(competences));
    }


    @OneToMany(fetch=FetchType.LAZY, mappedBy="qcm")
    public List<PersonneQcm> getPersonneQcms() {
        return this.personneQcms;
    }

    public void setPersonneQcms(List<PersonneQcm> personneQcms) {
        this.personneQcms.set(FXCollections.observableArrayList(personneQcms));
    }


}


