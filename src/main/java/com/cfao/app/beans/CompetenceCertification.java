package com.cfao.app.beans;

import javafx.beans.property.ListProperty;
import javafx.beans.property.SimpleListProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.collections.FXCollections;

import javax.persistence.*;
import java.util.List;

/**
 * CompetenceCertification generated by hbm2java
 */
@Entity
@Table(name="competence_certification"
        ,catalog="servicepro"
)
public class CompetenceCertification implements java.io.Serializable {


    private SimpleStringProperty certification = new SimpleStringProperty();
    private SimpleStringProperty libelle = new SimpleStringProperty();
    private ListProperty<PersonneCompetence> personneCompetences = new SimpleListProperty<>();

    public CompetenceCertification() {
    }


    public CompetenceCertification(String statut) {
        this.certification.set(statut);
    }
    public CompetenceCertification(String statut, String libelle) {
        this.certification.set(statut);
        this.libelle.set(libelle);
    }

    @Id

    @Column(name="CERTIFICATION", unique=true, nullable=false, length=2)
    public String getCertification() {
        return this.certification.get();
    }

    public void setCertification(String statut) {
        this.certification.set(statut);
    }

    @Column(name="LIBELLE", nullable=false, length=15)
    public String getLibelle() {
        return libelle.get();
    }

    public SimpleStringProperty libelleProperty() {
        return libelle;
    }

    public void setLibelle(String libelle) {
        this.libelle.set(libelle);
    }

    @Override
    public String toString() {
        return getLibelle();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        CompetenceCertification that = (CompetenceCertification) o;

        if(certification != null){
            return certification.equals(that.getCertification());
        }
        return false;
    }

    @Override
    public int hashCode() {
        int result = certification != null ? certification.hashCode() : 0;
        result = 31 * result + (libelle != null ? libelle.hashCode() : 0);
        return result;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="competenceCertification")
    public List<PersonneCompetence> getPersonneCompetences() {

        return personneCompetences.get();
    }

    public ListProperty<PersonneCompetence> personneCompetencesProperty() {
        return personneCompetences;
    }

    public void setPersonneCompetences(List<PersonneCompetence> personneCompetences) {
        this.personneCompetences.set(FXCollections.observableArrayList(personneCompetences));
    }
}


