package com.cfao.app.beans;

import javafx.beans.property.SetProperty;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleSetProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.collections.FXCollections;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Personnels generated by hbm2java
 */
@Entity
@Table(name="personnels"
        ,catalog="servicepro"
)
public class Personnel implements java.io.Serializable {


    private SimpleIntegerProperty idpersonnel = new SimpleIntegerProperty();
    private SimpleStringProperty nom = new SimpleStringProperty();
    private SimpleStringProperty prenom = new SimpleStringProperty();
    private SimpleStringProperty adresse = new SimpleStringProperty();
    private SimpleStringProperty telephone = new SimpleStringProperty();
    private SetProperty<Formation> formations = new SimpleSetProperty<>();

    public Personnel() {
    }


    public Personnel(String nom) {
        this.nom.set(nom);
    }
    public Personnel(String nom, String prenom, String adresse, String telephone, Set<Formation> formations) {
        this.nom.set(nom);
        this.prenom.set(prenom);
        this.adresse.set(adresse);
        this.telephone.set(telephone);
        this.formations.set(FXCollections.observableSet(formations));
    }

    @Id @GeneratedValue(strategy=IDENTITY)
    @Column(name="IDPERSONNEL", unique=true, nullable=false)
    public Integer getIdpersonnel() {
        return this.idpersonnel.get();
    }

    public void setIdpersonnel(Integer idpersonnel) {
        this.idpersonnel.set(idpersonnel);
    }


    @Column(name="NOM", nullable=false, length=30)
    public String getNom() {
        return this.nom.get();
    }

    public void setNom(String nom) {
        this.nom.set(nom);
    }


    @Column(name="PRENOM", length=30)
    public String getPrenom() {
        return this.prenom.get();
    }

    public void setPrenom(String prenom) {
        this.prenom.set(prenom);
    }


    @Column(name="ADRESSE", length=50)
    public String getAdresse() {
        return this.adresse.get();
    }

    public void setAdresse(String adresse) {
        this.adresse.set(adresse);
    }


    @Column(name="TELEPHONE", length=20)
    public String getTelephone() {
        return this.telephone.get();
    }

    public void setTelephone(String telephone) {
        this.telephone.set(telephone);
    }

    @ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="formateurs", catalog="servicepro", joinColumns = {
            @JoinColumn(name="PERSONNEL", nullable=false, updatable=false) }, inverseJoinColumns = {
            @JoinColumn(name="FORMATION", nullable=false, updatable=false) })
    public Set<Formation> getFormations() {
        return this.formations;
    }

    public void setFormations(Set<Formation> formations) {
        this.formations.set(FXCollections.observableSet(formations));
    }




}


