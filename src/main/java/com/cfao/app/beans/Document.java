package com.cfao.app.beans;

// Generated Aug 29, 2017 4:18:12 PM by Hibernate Tools 4.3.1


        import javafx.beans.property.*;
import javafx.collections.FXCollections;

import javax.persistence.*;
import java.util.List;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Documents generated by hbm2java
 */
@Entity
@Table(name="documents"
)
public class Document  implements java.io.Serializable {


    private IntegerProperty iddocument = new SimpleIntegerProperty();
    private StringProperty libelle = new SimpleStringProperty();
    private ListProperty<Planification> planifications = new SimpleListProperty<>();

    public Document() {
    }


    public Document(String libelle) {
        this.libelle.set(libelle);
    }
    public Document(String libelle, List<Planification> planifications) {
        this.libelle.set(libelle);
        this.planifications.set(FXCollections.observableArrayList(planifications));
    }

    @Id @GeneratedValue(strategy=IDENTITY)


    @Column(name="IDDOCUMENT", unique=true, nullable=false)
    public Integer getIddocument() {
        return this.iddocument.get();
    }

    public void setIddocument(Integer iddocument) {
        this.iddocument.set(iddocument);
    }


    @Column(name="LIBELLE", nullable=false, length=250)
    public String getLibelle() {
        return this.libelle.get();
    }

    public void setLibelle(String libelle) {
        this.libelle.set(libelle);
    }

    @ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="planification_document", joinColumns = {
            @JoinColumn(name="DOCUMENT", nullable=false, updatable=false) }, inverseJoinColumns = {
            @JoinColumn(name="PLANIFICATION", nullable=false, updatable=false) })
    public List<Planification> getPlanifications() {
        return this.planifications.get();
    }

    public void setPlanifications(List<Planification> planifications) {
        if(planifications != null) {
            this.planifications.set(FXCollections.observableArrayList(planifications));
        }
    }

    @Override
    public String toString(){
        return getLibelle();
    }



}


