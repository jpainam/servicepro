package com.cfao.app.beans;


import javafx.beans.property.ObjectProperty;
import javafx.beans.property.SimpleObjectProperty;

import javax.persistence.*;
import java.math.BigDecimal;

/**
 * PersonneQcm generated by hbm2java
 */
@Entity
@Table(name = "personne_qcm"
        , catalog = "servicepro"
)
public class PersonneQcm implements java.io.Serializable {


    private PersonneQcmId id = new PersonneQcmId();
    private ObjectProperty<Personne> personne = new SimpleObjectProperty<>();
    private ObjectProperty<Qcm> qcm = new SimpleObjectProperty<>();

    public PersonneQcm() {
    }

    public PersonneQcm(PersonneQcmId id, Personne personnes, Qcm qcm) {
        this.id = id;
        this.personne.set(personnes);
        this.qcm.set(qcm);
    }

    @EmbeddedId


    @AttributeOverrides({
            @AttributeOverride(name = "personne", column = @Column(name = "PERSONNE", nullable = false)),
            @AttributeOverride(name = "qcm", column = @Column(name = "QCM", nullable = false)),
            @AttributeOverride(name = "note", column = @Column(name = "NOTE", nullable = false, precision = 6))})
    public PersonneQcmId getId() {
        return this.id;
    }

    public void setId(PersonneQcmId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "PERSONNE", nullable = false, insertable = false, updatable = false)
    public Personne getPersonne() {
        return this.personne.get();
    }

    public void setPersonne(Personne personnes) {
        this.personne.set(personnes);
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "QCM", nullable = false, insertable = false, updatable = false)
    public Qcm getQcm() {
        return this.qcm.get();
    }

    public void setQcm(Qcm qcm) {
        this.qcm.set(qcm);
    }

    @Override
    public String toString() {
        return "PersonneQcm{" +
                "id=" + id +
                ", personne=" + personne.get() +
                ", qcm=" + qcm.get() +
                '}';
    }

    public void setNote(double note){
        this.getId().setNote(BigDecimal.valueOf(note));
    }

    @Transient
    public BigDecimal getNote(){
        return this.id.getNote();
    }
}


