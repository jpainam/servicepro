package com.cfao.app.beans;

import javafx.beans.property.ListProperty;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleListProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.collections.FXCollections;

import javax.persistence.*;
import java.util.List;

/**
 * Profils generated by hbm2java
 */
@Entity
@Table(name = "profils"
        , catalog = "servicepro"
)
public class Profil implements java.io.Serializable {


    private SimpleIntegerProperty idprofil = new SimpleIntegerProperty();
    private SimpleStringProperty abbreviation = new SimpleStringProperty();
    private SimpleStringProperty libelle = new SimpleStringProperty();
    private ListProperty<Competence> competences = new SimpleListProperty<>();
    private ListProperty<ProfilPersonne> profilPersonnes = new SimpleListProperty<>();

    public Profil() {
    }


    public Profil(String libelle) {
        this.libelle.set(libelle);
    }

    public Profil(String abbreviation, String libelle, List<Competence> competences, List<ProfilPersonne> profilPersonne) {
        this.abbreviation.set(abbreviation);
        this.libelle.set(libelle);
        this.competences.set(FXCollections.observableArrayList(competences));
        this.profilPersonnes.set(FXCollections.observableArrayList(profilPersonne));
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)


    @Column(name = "IDPROFIL", unique = true, nullable = false)
    public Integer getIdprofil() {
        return this.idprofil.get();
    }

    public void setIdprofil(Integer idprofil) {
        this.idprofil.set(idprofil);
    }


    @Column(name = "ABBREVIATION", length = 15)
    public String getAbbreviation() {
        return this.abbreviation.get();
    }

    public void setAbbreviation(String abbreviation) {
        this.abbreviation.set(abbreviation);
    }


    @Column(name = "LIBELLE", nullable = false, length = 50)
    public String getLibelle() {
        return this.libelle.get();
    }

    public void setLibelle(String libelle) {
        this.libelle.set(libelle);
    }


    @OneToMany(fetch = FetchType.LAZY, mappedBy = "profil")
    public List<ProfilPersonne> getProfilPersonnes() {
        return this.profilPersonnes.get();
    }

    public void setProfilPersonnes(List<ProfilPersonne> profilPersonne) {
        if(profilPersonne != null) {
            this.profilPersonnes.set(FXCollections.observableArrayList(profilPersonne));
        }
    }


    public SimpleStringProperty libelleProperty() {
        return libelle;
    }


    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "profil_competence", catalog = "servicepro", joinColumns = {
            @JoinColumn(name = "PROFIL", nullable = false, updatable = false)}, inverseJoinColumns = {
            @JoinColumn(name = "COMPETENCE", nullable = false, updatable = false)})
    public List<Competence> getCompetences() {
        return competences.get();
    }

    public ListProperty<Competence> competencesProperty() {
        return competences;
    }

    public void setCompetences(List<Competence> competences) {
        this.competences.set(FXCollections.observableList(competences));
    }
    @Transient
    public Competence getOriginalCompetence(Competence competence){
        for(Competence original : this.competences){
            if(original.getIdcompetence().equals(competence.getIdcompetence()))
                return original;
        }
        return null;
    }

    @Override
    public String toString() {
        return getLibelle();
    }
}


